@page "/"
@using Ardalis.GuardClauses
@using MediatR
@using TripPlanner.Application.Trips.Queries

@inject ISender Sender

<div class="space-y-6">

    @if (_trips.Any())
    {
        <h1 class="text-2xl mb-4">Your Trips</h1>

        @foreach (var trip in _trips)
        {
            <a href=@($"/trip/{trip.Id}") class="text-green-400 underline">@trip.Title</a>
        }
    }
    
    <div>
        <h1 class="text-2xl mb-4">Join a trip</h1>
        <form method="post" @onsubmit="JoinTrip" @formname="join-trip-form">
            <AntiforgeryToken/>

            <InputText @bind-Value="JoinCode" class="rounded text-black" maxlength="6" minlength="6" required/>
            <FlowButton Type="FlowButton.ButtonType.Submit">Join</FlowButton>
        </form>
    </div>

    <div>– OR –</div>

    <div>
        <FlowButton Type="FlowButton.ButtonType.Link" Href="/create">Create a trip</FlowButton>
    </div>
</div>



@code {

    private IReadOnlyCollection<TripDto> _trips = [];

    [SupplyParameterFromForm] private string? JoinCode { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadTrips();
    }

    private async Task LoadTrips()
    {
        var result = await Sender.Send(new GetTripsQuery());
        _trips = Guard.Against.Null(result);
    }

    private void JoinTrip()
    {
        if (JoinCode?.Length != 6) return;
        Console.WriteLine("Joining trip with code: " + JoinCode);
    }

}