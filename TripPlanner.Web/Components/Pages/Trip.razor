@page "/trip/{Id:guid}"
@using Humanizer
@using MediatR
@using TripPlanner.Application.Entries.Commands
@using TripPlanner.Application.Trips
@using TripPlanner.Application.Trips.Queries
@using TripPlanner.Infrastructure

@inject ISender Sender

@if (_trip == null)
{
    <p>Loading ...</p>
}
else
{
    <div class="space-y-6 w-full max-w-3xl bg-gray-800 border border-gray-700 shadow rounded-lg p-5 mb-6">

        <h1 class="text-3xl mb-4">@_trip?.Title</h1>
        
        <code>@_trip?.JoinCode</code>

        <div class="flex flex-col items-center mb-4">
            @foreach (var member in _trip!.Participants)
            {
                <div class="flex items-center gap-4 mb-4">
                    <div
                        class="relative inline-flex items-center justify-center w-10 h-10 overflow-hidden  rounded-full bg-gray-600">
                        <span class="font-medium text-gray-300">@(new string(member.UserName.GetInitials()))</span>
                    </div>
                    <div class="font-medium text-white text-center">
                        <div>@member.UserName</div>
                        <div class="text-sm text-gray-400">Joined @member.JoinedOn.ToLocalTime().Humanize()</div>
                    </div>
                </div>
            }
        </div>

        @foreach (var entry in _trip!.Entries)
        {
            <div class="block items-center max-w-sm p-6 border rounded-lg shadow bg-gray-700 border-gray-600 text-left">
                <div class="flex flex-row justify-between">

                    <div>

                        <h5 class="mb-2 text-2xl font-bold tracking-tight text-white">@entry.Title</h5>

                        @if (entry.Comment is not null)
                        {
                            <p class="font-normal text-white">@entry.Comment</p>
                        }
                    </div>
                    <div>
                        <button type="button" class="">
                            <svg class="w-6 h-6 stroke-1 stroke-green-500 fill-none hover:fill-green-500"
                                 aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                 viewBox="0 0 24 24">
                                <path fill-rule="evenodd"
                                      d="M15.03 9.684h3.965c.322 0 .64.08.925.232.286.153.532.374.717.645a2.109 2.109 0 0 1 .242 1.883l-2.36 7.201c-.288.814-.48 1.355-1.884 1.355-2.072 0-4.276-.677-6.157-1.256-.472-.145-.924-.284-1.348-.404h-.115V9.478a25.485 25.485 0 0 0 4.238-5.514 1.8 1.8 0 0 1 .901-.83 1.74 1.74 0 0 1 1.21-.048c.396.13.736.397.96.757.225.36.32.788.269 1.211l-1.562 4.63ZM4.177 10H7v8a2 2 0 1 1-4 0v-6.823C3 10.527 3.527 10 4.176 10Z"
                                      clip-rule="evenodd"/>
                            </svg>
                            <span class="sr-only">Upvote</span>
                        </button>
                        <button type="button" class="">
                            <svg class="w-6 h-6 stroke-1 stroke-red-600 fill-none hover:fill-red-600" aria-hidden="true"
                                 xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                <path fill-rule="evenodd"
                                      d="M8.97 14.316H5.004c-.322 0-.64-.08-.925-.232a2.022 2.022 0 0 1-.717-.645 2.108 2.108 0 0 1-.242-1.883l2.36-7.201C5.769 3.54 5.96 3 7.365 3c2.072 0 4.276.678 6.156 1.256.473.145.925.284 1.35.404h.114v9.862a25.485 25.485 0 0 0-4.238 5.514c-.197.376-.516.67-.901.83a1.74 1.74 0 0 1-1.21.048 1.79 1.79 0 0 1-.96-.757 1.867 1.867 0 0 1-.269-1.211l1.562-4.63ZM19.822 14H17V6a2 2 0 1 1 4 0v6.823c0 .65-.527 1.177-1.177 1.177Z"
                                      clip-rule="evenodd"/>
                            </svg>
                            <span class="sr-only">Downvote</span>
                        </button>
                    </div>
                </div>

                <div class="flex flex-row justify-between text-gray-400">
                    <p class="text-sm">@entry.CreatedBy</p>
                    <p class="text-sm">@entry.Created.ToLocalTime().Humanize()</p>
                </div>
            </div>
        }

        <EditForm Model="Model" OnValidSubmit="AddEntry" FormName="AddEntry">
            <div class="w-full mb-4 border rounded-lg bg-gray-700 border-gray-600">
                <div class="py-2 rounded-t-lg bg-gray-800 divide-y divide-solid divide-gray-600">
                    <InputText @bind-Value="Model.Title" id="title"
                               class="px-4 text-lg w-full border-0 bg-gray-800 focus:ring-0 text-white placeholder-gray-400"
                               placeholder="Title*" required/>

                    <InputTextArea @bind-Value="Model.Comment" id="description" rows="2"
                                   class="px-4 w-full text-sm border-0 bg-gray-800 focus:ring-0 text-white placeholder-gray-400 resize-none"
                                   placeholder="Write a comment..."/>
                </div>
                <div class="flex items-center justify-between px-3 py-2 border-t border-gray-600">
                    <FlowButton Type="FlowButton.ButtonType.Submit">Post suggestion</FlowButton>
                    <div class="flex ps-0 space-x-1 rtl:space-x-reverse sm:ps-2">
                        <button type="button"
                                class="inline-flex justify-center items-center p-2 rounded cursor-pointer text-gray-400 hover:text-white hover:bg-gray-600">
                            <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                                 viewBox="0 0 12 20">
                                <path stroke="currentColor" stroke-linejoin="round" stroke-width="2"
                                      d="M1 6v8a5 5 0 1 0 10 0V4.5a3.5 3.5 0 1 0-7 0V13a2 2 0 0 0 4 0V6"/>
                            </svg>
                            <span class="sr-only">Attach file</span>
                        </button>
                        <button type="button"
                                class="inline-flex justify-center items-center p-2 rounded cursor-pointer text-gray-400 hover:text-white hover:bg-gray-600">
                            <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                 fill="currentColor"
                                 viewBox="0 0 16 20">
                                <path
                                    d="M8 0a7.992 7.992 0 0 0-6.583 12.535 1 1 0 0 0 .12.183l.12.146c.112.145.227.285.326.4l5.245 6.374a1 1 0 0 0 1.545-.003l5.092-6.205c.206-.222.4-.455.578-.7l.127-.155a.934.934 0 0 0 .122-.192A8.001 8.001 0 0 0 8 0Zm0 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z"/>
                            </svg>
                            <span class="sr-only">Set location</span>
                        </button>
                        <button type="button"
                                class="inline-flex justify-center items-center p-2 rounded cursor-pointer text-gray-400 hover:text-white hover:bg-gray-600">
                            <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                 fill="currentColor"
                                 viewBox="0 0 20 18">
                                <path
                                    d="M18 0H2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2Zm-5.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4.376 10.481A1 1 0 0 1 16 15H4a1 1 0 0 1-.895-1.447l3.5-7A1 1 0 0 1 7.468 6a.965.965 0 0 1 .9.5l2.775 4.757 1.546-1.887a1 1 0 0 1 1.618.1l2.541 4a1 1 0 0 1 .028 1.011Z"/>
                            </svg>
                            <span class="sr-only">Upload image</span>
                        </button>
                    </div>
                </div>
            </div>
        </EditForm>

        <a href="/" class="block text-green-500 underline text-left">Go back</a>
    </div>
}

@code {

    [Parameter] public Guid Id { get; set; }

    private TripDto? _trip;

    [SupplyParameterFromForm] private CreateEntryModel Model { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        // get trip
        _trip = await Sender.Send(new GetTripQuery(Id));
    }

    private async Task AddEntry()
    {
        await Sender.Send(new CreateEntryCommand(Id, Model.Title)
        {
            Comment = Model.Comment
        });

        // clear comment
        Model = new();

        // refresh trip
        _trip = await Sender.Send(new GetTripQuery(Id));
    }

    class CreateEntryModel
    {
        public string Title { get; set; }
        public string? Comment { get; set; }
    }

}