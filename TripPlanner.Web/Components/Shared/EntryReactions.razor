@using TripPlanner.Core.Enums
<div>
    <ReactIconButton Class="text-green-500" Toggled="IsToggled(ReactionType.Like)" OnClick="@(() => ToggleReaction(ReactionType.Like))" Count="GetCount(ReactionType.Like)">
        <path fill-rule="evenodd"
              d="M15.03 9.684h3.965c.322 0 .64.08.925.232.286.153.532.374.717.645a2.109 2.109 0 0 1 .242 1.883l-2.36 7.201c-.288.814-.48 1.355-1.884 1.355-2.072 0-4.276-.677-6.157-1.256-.472-.145-.924-.284-1.348-.404h-.115V9.478a25.485 25.485 0 0 0 4.238-5.514 1.8 1.8 0 0 1 .901-.83 1.74 1.74 0 0 1 1.21-.048c.396.13.736.397.96.757.225.36.32.788.269 1.211l-1.562 4.63ZM4.177 10H7v8a2 2 0 1 1-4 0v-6.823C3 10.527 3.527 10 4.176 10Z"
              clip-rule="evenodd"/>
    </ReactIconButton>
    
    <ReactIconButton Class="text-red-600" Toggled="IsToggled(ReactionType.Dislike)" OnClick="@(() => ToggleReaction(ReactionType.Dislike))" Count="GetCount(ReactionType.Dislike)">
        <path fill-rule="evenodd"
              d="M8.97 14.316H5.004c-.322 0-.64-.08-.925-.232a2.022 2.022 0 0 1-.717-.645 2.108 2.108 0 0 1-.242-1.883l2.36-7.201C5.769 3.54 5.96 3 7.365 3c2.072 0 4.276.678 6.156 1.256.473.145.925.284 1.35.404h.114v9.862a25.485 25.485 0 0 0-4.238 5.514c-.197.376-.516.67-.901.83a1.74 1.74 0 0 1-1.21.048 1.79 1.79 0 0 1-.96-.757 1.867 1.867 0 0 1-.269-1.211l1.562-4.63ZM19.822 14H17V6a2 2 0 1 1 4 0v6.823c0 .65-.527 1.177-1.177 1.177Z"
              clip-rule="evenodd"/>
    </ReactIconButton>
</div>

@code {
    [Parameter] public required Dictionary<ReactionType, int> ReactionCounts { get; set; }
    [Parameter] public EventCallback<Dictionary<ReactionType, int>> ReactionCountsChanged { get; set; }
    [Parameter] public required HashSet<ReactionType> OwnReactions { get; set; }
    [Parameter] public EventCallback<HashSet<ReactionType>> OwnReactionsChanged { get; set; }
    [Parameter] public EventCallback<ReactionType> OnToggleReaction { get; set; }

    private void ToggleReaction(ReactionType type) {
        if (!OwnReactions.Add(type))
        {
            OwnReactions.Remove(type);
            ReactionCounts[type] = GetCount(type) - 1;
        }
        else
        {
            ReactionCounts[type] = GetCount(type) + 1;
        }

        OnToggleReaction.InvokeAsync(type);
        ReactionCountsChanged.InvokeAsync(ReactionCounts);
        OwnReactionsChanged.InvokeAsync(OwnReactions);
    }
    private bool IsToggled(ReactionType type) => OwnReactions.Contains(type);

    private int GetCount(ReactionType type)
    {
        ReactionCounts.TryGetValue(type, out var value);
        return value;
    }
}